{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\course\\\\beetroot-academy\\\\Loshkovetska\\\\cinema-park\\\\src\\\\components\\\\MovieList\\\\MovieList.js\";\nimport React from \"react\";\nimport \"../MovieList/MovieList.scss\";\nimport { movieData as movies } from \"../../mockData/movieData\";\nimport { HalfStar, Star } from \"../Svg/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieList(props) {\n  function filterData(date, month) {\n    return movies.filter(movie => {\n      let flag = false;\n      movie.datesShow.forEach(item => {\n        let [dateShow, monthShow] = item;\n\n        if (dateShow === date && monthShow === month) {\n          flag = true;\n          return;\n        }\n      });\n      return flag;\n    });\n  }\n\n  const getStars = rating => {\n    console.log(rating);\n    const stars = new Array(5);\n    let intValue = Math.floor(rating);\n    if (intValue === 5) stars.fill( /*#__PURE__*/_jsxDEV(Star, {\n      className: \"movie-item-svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }, this));else {\n      stars.fill( /*#__PURE__*/_jsxDEV(Star, {\n        className: \"movie-item-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this), 0, intValue - 1);\n      stars.fill( /*#__PURE__*/_jsxDEV(HalfStar, {\n        className: \"movie-item-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this), intValue - 1, 5);\n    }\n    console.log(stars);\n    return stars.map((star, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"star\",\n      children: star\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 44\n    }, this));\n  };\n\n  const getTags = tags => {\n    return tags.length > 1 ? tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tags__item\",\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 45\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tags__item\",\n      children: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this);\n  };\n\n  function showList() {\n    const [date, month] = props.dateForList.split(\",\");\n    const filteredData = filterData(+date, +month);\n    console.log(filteredData);\n    return filteredData.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-list__item movie\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${movie.src})`\n          },\n          className: \"movie__poster poster\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster__tags tags\",\n            children: getTags(movie.tags)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster__title\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster__genre\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre-title\",\n              children: \"\\u0416\\u0430\\u043D\\u0440: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 60\n            }, this), movie.genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster__rating\",\n            children: getStars(movie.rating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster__previews previews\",\n          children: \"poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movie-list\",\n      children: showList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/course/beetroot-academy/Loshkovetska/cinema-park/src/components/MovieList/MovieList.js"],"names":["React","movieData","movies","HalfStar","Star","MovieList","props","filterData","date","month","filter","movie","flag","datesShow","forEach","item","dateShow","monthShow","getStars","rating","console","log","stars","Array","intValue","Math","floor","fill","map","star","index","getTags","tags","length","tag","showList","dateForList","split","filteredData","backgroundImage","src","title","genre","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../MovieList/MovieList.scss\";\r\nimport { movieData as movies } from \"../../mockData/movieData\";\r\nimport { HalfStar, Star } from \"../Svg/Svg\";\r\n\r\nexport default function MovieList(props) {\r\n\r\n    function filterData(date, month) {\r\n        return movies.filter((movie) => {\r\n            let flag = false;\r\n            movie.datesShow.forEach(item => {\r\n                let [dateShow, monthShow] = item;\r\n                if (dateShow === date && monthShow === month) { flag = true; return; }\r\n            });\r\n            return flag;\r\n        });\r\n    }\r\n\r\n    const getStars = (rating) => {\r\n        console.log(rating);\r\n        const stars = new Array(5);\r\n        let intValue = Math.floor(rating);\r\n        if (intValue === 5) stars.fill(<Star className=\"movie-item-svg\" />);\r\n        else {\r\n            stars.fill(<Star className=\"movie-item-svg\" />, 0, intValue - 1);\r\n            stars.fill(<HalfStar className=\"movie-item-svg\" />, intValue - 1, 5);\r\n        }\r\n        console.log(stars);\r\n        return stars.map((star, index) => (<span className=\"star\" key={index}>{star}</span>));\r\n    };\r\n\r\n    const getTags = (tags) => {\r\n        return (\r\n            (tags.length > 1)\r\n                ? tags.map((tag, index) => (<span className=\"tags__item\" key={index}>{tag}</span>))\r\n                : <span className=\"tags__item\">{tags}</span>\r\n        );\r\n    };\r\n\r\n\r\n    function showList() {\r\n        const [date, month] = props.dateForList.split(\",\");\r\n        const filteredData = filterData(+date, +month);\r\n        console.log(filteredData);\r\n        return (\r\n            filteredData.map(movie => {\r\n                return (\r\n                    <div className=\"movie-list__item movie\" key={movie.id}>\r\n                        <div style={{ backgroundImage: `url(${movie.src})` }} className=\"movie__poster poster\" >\r\n                            <div className=\"poster__tags tags\">\r\n                                {getTags(movie.tags)}\r\n                            </div>\r\n                            <div className=\"poster__title\">{movie.title}</div>\r\n                            <div className=\"poster__genre\"><span className=\"genre-title\">Жанр: </span>{movie.genre}</div>\r\n                            <div className=\"poster__rating\">{getStars(movie.rating)}</div>\r\n                        </div>\r\n                        <div className=\"poster__previews previews\">\r\n                            poster\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"movie-list\">\r\n                {showList()}\r\n            </section>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}