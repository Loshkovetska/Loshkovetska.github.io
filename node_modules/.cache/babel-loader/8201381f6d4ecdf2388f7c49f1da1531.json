{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\course\\\\beetroot-academy\\\\Loshkovetska\\\\cinema-park\\\\src\\\\components\\\\Comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport comments from \"../../mockData/comments\";\nimport \"./Comments.scss\";\nimport { users } from \"../../mockData/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n\n  const [comment, setComment] = useState();\n  let count = 0;\n  const userName = users.filter(user => user.email === localStorage.getItem(\"email\"));\n\n  function onChangeHadler(e) {\n    setComment(e.target.value);\n  }\n\n  function addComment() {\n    comment.push({\n      author: userName,\n      text: comment,\n      countLikes: 0\n    });\n  }\n\n  function putLike() {}\n\n  function getComment(author, date, text, countLikes, index) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__author\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment__text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          className: \"button button--answer\",\n          children: \"\\u0412\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0441\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: putLike,\n          className: \"button button--like\",\n          children: countLikes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__count\",\n        children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456 ()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input input--comment\",\n          onChange: onChangeHadler,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0457 \\u0432\\u0440\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0432\\u0456\\u0434  \\u043F\\u0435\\u0440\\u0435\\u0433\\u043B\\u044F\\u0434\\u0443 \\u0444\\u0456\\u043B\\u044C\\u043C\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--comment\",\n          onClick: addComment,\n          children: \"\\u0412\\u0456\\u0434\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__output\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments__old\",\n          children: comments.map((comment, index) => getComment(comment.author, comment.date, comment.text, comment.countLikes, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"iKZALZJ7kpJZJxVo4TkfW9SNars=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/course/beetroot-academy/Loshkovetska/cinema-park/src/components/Comments/Comments.js"],"names":["React","useState","comments","users","Comments","comment","setComment","count","userName","filter","user","email","localStorage","getItem","onChangeHadler","e","target","value","addComment","push","author","text","countLikes","putLike","getComment","date","index","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport comments from \"../../mockData/comments\";\r\nimport \"./Comments.scss\";\r\nimport { users } from \"../../mockData/users\";\r\n\r\nexport default function Comments() {\r\n    const [comment, setComment] = useState();\r\n    let count = 0;\r\n    const userName = users.filter(user => user.email === localStorage.getItem(\"email\"));\r\n\r\n\r\n    function onChangeHadler(e) {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function addComment() {\r\n        comment.push({ author: userName, text: comment, countLikes: 0, })\r\n    }\r\n\r\n    function putLike() {\r\n\r\n    }\r\n\r\n    function getComment(author, date, text, countLikes, index) {\r\n        return (\r\n            <div className=\"comment\" key={index}>\r\n                <div className=\"comment__top\">\r\n                    <div className=\"comment__author\">{author}</div>\r\n                    <div className=\"comment__date\">{date}</div>\r\n                </div>\r\n                <p className=\"comment__text\">{text}</p>\r\n                <div className=\"comment__bottom\">\r\n                    <button onClick={addComment} className=\"button button--answer\">Відповісти</button>\r\n                    <button onClick={putLike} className=\"button button--like\">{countLikes}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <div className=\"comments__container\">\r\n                <div className=\"comments__count\">Коментарі ()</div>\r\n                <div className=\"comments__input\">\r\n                    <textarea className=\"input input--comment\" onChange={onChangeHadler}\r\n                        placeholder=\"Напишіть свої враження від  перегляду фільму\" />\r\n                    <button className=\"button button--comment\" onClick={addComment}>Відправити</button>\r\n                </div>\r\n                <div className=\"comments__output\">\r\n                    <div className=\"comments__old\">\r\n                        {\r\n                            comments.map((comment, index) => getComment(comment.author, comment.date, comment.text, comment.countLikes, index))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}