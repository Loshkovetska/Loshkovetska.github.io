{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\course\\\\beetroot-academy\\\\Loshkovetska\\\\cinema-park\\\\src\\\\components\\\\Comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { comments } from \"../../mockData/comments\";\nimport \"./Comments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n\n  const [comment, setComment] = useState();\n  let count = 0;\n\n  function onChangeHadler(e) {\n    setComment(e.target.value);\n  }\n\n  function addComment() {} // function putLike() {\n  // }\n\n\n  const Comment = ({\n    author,\n    date,\n    text,\n    countLikes\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__author\",\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comment__text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__count\",\n        children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456()\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input input--comment\",\n          onChange: onChangeHadler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--comment\",\n          onClick: addComment,\n          children: \"\\u0412\\u0456\\u0434\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__output\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments__old\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"iKZALZJ7kpJZJxVo4TkfW9SNars=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/course/beetroot-academy/Loshkovetska/cinema-park/src/components/Comments/Comments.js"],"names":["React","useState","comments","Comments","comment","setComment","count","onChangeHadler","e","target","value","addComment","Comment","author","date","text","countLikes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,MAAIK,KAAK,GAAG,CAAZ;;AAEA,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AACvBH,IAAAA,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH;;AAED,WAASC,UAAT,GAAsB,CAErB,CAV8B,CAY/B;AAEA;;;AAEA,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,GAAD,kBACZ;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,sBAA7B;AAAoD,UAAA,QAAQ,EAAER;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAEI,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA1DuBR,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\r\nimport { comments } from \"../../mockData/comments\";\r\nimport \"./Comments.scss\";\r\n\r\nexport default function Comments() {\r\n    const [comment, setComment] = useState();\r\n    let count = 0;\r\n\r\n    function onChangeHadler(e) {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function addComment() {\r\n\r\n    }\r\n\r\n    // function putLike() {\r\n\r\n    // }\r\n\r\n    const Comment = ({ author, date, text, countLikes }) => (\r\n        <div className=\"comment\">\r\n            <div className=\"comment__top\">\r\n                <div className=\"comment__author\">{author}</div>\r\n                <div className=\"comment__date\">{date}</div>\r\n            </div>\r\n            <p className=\"comment__text\">{text}</p>\r\n            <div className=\"comment__bottom\">\r\n                {/* <button onClick={addComment}>Відповісти</button> */}\r\n                {/* <button onClick={putLike}>{countLikes}</button> */}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <div className=\"comments__container\">\r\n                <div className=\"comments__count\">Коментарі()</div>\r\n                <div className=\"comments__input\">\r\n                    <input type=\"text\" className=\"input input--comment\" onChange={onChangeHadler} />\r\n                    <button className=\"button button--comment\" onClick={addComment}>Відправити</button>\r\n                </div>\r\n                <div className=\"comments__output\">\r\n                    <div className=\"comments__old\">\r\n                        {/* {\r\n                        comments.map(comment, index => (\r\n                            <Comment\r\n                                key={index}\r\n                                text={comment.text}\r\n                                date={comment.date}\r\n                                author={comment.author}\r\n                                countLikes={comment.countLikes}\r\n                            />\r\n                        ))\r\n                    } */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}