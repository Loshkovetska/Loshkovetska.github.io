{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\course\\\\beetroot-academy\\\\Loshkovetska\\\\cinema-park\\\\src\\\\components\\\\MapSeats\\\\MapSeats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactTooltip from 'react-tooltip';\nimport \"./MapSeats.scss\";\nimport { seatsRowsSideLeft, seatsRowsSideRight, seatsRowsCenter, vipSeats, seatsVariants } from \"../../mockData/seats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapSeats(props) {\n  _s();\n\n  const [isSelected, setSelected] = useState(false);\n  const selectedSeats = [];\n\n  function getVariants() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"variants\",\n      children: seatsVariants.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"variants__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"variants__item-icon seat-svg\",\n          children: [place.icon, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"variants__item-price\",\n          children: [place.price, \" \\u0433\\u0440\\u043D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  function buildMap(array, flag) {\n    return array.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seats-map__row\",\n      children: [flag ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seats-map__row-num\",\n        children: index + 1\n      }, \"num\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 31\n      }, this) : \"\", row.map(({\n        tooltip,\n        id,\n        seat,\n        type\n      }, index) => id !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"seat\",\n        \"data-typeseat\": type,\n        \"data-tip\": tooltip,\n        \"data-id\": id,\n        onClick: addSeat,\n        children: seat\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seat\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this));\n  }\n\n  function addSeat(e) {\n    let target = e.currentTarget;\n    let idSeat = target.dataset.id.split(\",\");\n    let flag = selectedSeats.some(item => item.seat === +idSeat[1] && item.row === +idSeat[0]);\n\n    if (!flag) {\n      selectedSeats.push({\n        seat: +idSeat[1],\n        row: +idSeat[0],\n        type: target.dataset.typeseat\n      });\n      setSelected(true);\n    } else {\n      let indexOF = 0;\n      selectedSeats.forEach((item, index) => {\n        if (item.seat === +idSeat[1] && item.row === +idSeat[0]) indexOF = index;\n      });\n      selectedSeats.splice(indexOF, 1);\n      setSelected(false);\n    }\n\n    props.getTickets(selectedSeats);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"seats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seats__title\",\n      children: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043C\\u0456\\u0441\\u0446\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"seats__map seats-map\",\n      children: [getVariants(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seats-map__top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seats-map__col-name\",\n          children: \"\\u0420\\u044F\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seats-map__col-name\",\n          children: \"\\u0415\\u043A\\u0440\\u0430\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"seats-map__col-name\",\n          children: \"\\u0420\\u044F\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seats-map__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seats-map__general\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seats-map__col-left\",\n            children: buildMap(seatsRowsSideLeft, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seats-map__col-center\",\n            children: buildMap(seatsRowsCenter, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seats-map__col-right\",\n            children: seatsRowsSideRight.map((row, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seats-map__row\",\n                children: [row.map(({\n                  tooltip,\n                  id,\n                  seat,\n                  type\n                }, index) => id !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"seat\",\n                  \"data-tip\": tooltip,\n                  \"data-id\": id,\n                  \"data-typeseat\": type,\n                  onClick: addSeat,\n                  children: seat\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seat\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 69\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"seats-map__row-num\",\n                  children: index + 1\n                }, \"num\" + index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 45\n                }, this)]\n              }, \"num\" + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)\n            }, void 0, false))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"seats-map__vip\",\n          children: buildMap(vipSeats)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MapSeats, \"xzWZviNu69Xo6UVtdt7MewEOG0I=\");\n\n_c = MapSeats;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapSeats\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/course/beetroot-academy/Loshkovetska/cinema-park/src/components/MapSeats/MapSeats.js"],"names":["React","useState","ReactTooltip","seatsRowsSideLeft","seatsRowsSideRight","seatsRowsCenter","vipSeats","seatsVariants","MapSeats","props","isSelected","setSelected","selectedSeats","getVariants","map","place","index","icon","price","buildMap","array","flag","row","tooltip","id","seat","type","addSeat","e","target","currentTarget","idSeat","dataset","split","some","item","push","typeseat","indexOF","forEach","splice","getTickets"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport \"./MapSeats.scss\";\r\n\r\n\r\nimport {\r\n    seatsRowsSideLeft,\r\n    seatsRowsSideRight,\r\n    seatsRowsCenter,\r\n    vipSeats,\r\n    seatsVariants\r\n} from \"../../mockData/seats\";\r\n\r\n\r\n\r\n\r\nexport default function MapSeats(props) {\r\n    const [isSelected, setSelected] = useState(false);\r\n    const selectedSeats = [];\r\n\r\n    function getVariants() {\r\n        return (\r\n            <div className=\"variants\">\r\n                {\r\n                    seatsVariants.map((place, index) => (\r\n                        <div className=\"variants__item\" key={index}>\r\n                            <div className=\"variants__item-icon seat-svg\">{place.icon} </div>\r\n                            <span className=\"variants__item-price\">{place.price} грн</span>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function buildMap(array, flag) {\r\n        return (\r\n            array.map((row, index) => (\r\n                <div className=\"seats-map__row\" key={index}>\r\n                    {(flag) ? <div className=\"seats-map__row-num\" key={\"num\" + index}>{index + 1}</div> : \"\"}\r\n                    {\r\n                        row.map(({ tooltip, id, seat, type }, index) => (\r\n                            (id !== null) ?\r\n                                <button\r\n                                    className=\"seat\"\r\n                                    key={index}\r\n                                    data-typeseat={type}\r\n                                    data-tip={tooltip} data-id={id} onClick={addSeat}>\r\n                                    {seat}\r\n                                </button> : <div className=\"seat\" key={index}></div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            ))\r\n        );\r\n    }\r\n\r\n    function addSeat(e) {\r\n        let target = e.currentTarget;\r\n        let idSeat = target.dataset.id.split(\",\");\r\n        let flag = selectedSeats.some(item =>\r\n            item.seat === +idSeat[1] &&\r\n            item.row === +idSeat[0]);\r\n\r\n        if (!flag) {\r\n\r\n            selectedSeats.push({\r\n                seat: +idSeat[1],\r\n                row: +idSeat[0],\r\n                type: target.dataset.typeseat\r\n            });\r\n            setSelected(true);\r\n        }\r\n        else {\r\n            let indexOF = 0;\r\n            selectedSeats.forEach((item, index) => {\r\n                if (item.seat === +idSeat[1] && item.row === +idSeat[0])\r\n                    indexOF = index;\r\n            });\r\n\r\n            selectedSeats.splice(indexOF, 1);\r\n            setSelected(false);\r\n        }\r\n\r\n        props.getTickets(selectedSeats);\r\n\r\n    }\r\n    return (\r\n        <section className=\"seats\">\r\n            <div className=\"seats__title\">Оберіть місця</div>\r\n            <div className=\"seats__map seats-map\">\r\n                {getVariants()}\r\n                <div className=\"seats-map__top\">\r\n                    <span className=\"seats-map__col-name\">Ряд</span>\r\n                    <span className=\"seats-map__col-name\">Екран</span>\r\n                    <span className=\"seats-map__col-name\">Ряд</span>\r\n                </div>\r\n                <div className=\"seats-map__content\">\r\n                    <div className=\"seats-map__general\">\r\n                        <div className=\"seats-map__col-left\">\r\n                            {buildMap(seatsRowsSideLeft, true)}\r\n                        </div>\r\n                        <div className=\"seats-map__col-center\">\r\n                            {buildMap(seatsRowsCenter, false)}\r\n                        </div>\r\n                        <div className=\"seats-map__col-right\">\r\n                            {\r\n                                seatsRowsSideRight.map((row, index) => (\r\n                                    <>\r\n\r\n                                        <div className=\"seats-map__row\" key={\"num\" + index}>\r\n                                            {\r\n                                                row.map(({ tooltip, id, seat, type }, index) => (\r\n                                                    (id !== null) ?\r\n                                                        <button\r\n                                                            className=\"seat\"\r\n                                                            key={index}\r\n                                                            data-tip={tooltip} data-id={id}\r\n                                                            data-typeseat={type} onClick={addSeat}>\r\n                                                            {seat}\r\n                                                        </button> : <div className=\"seat\" key={index}></div>\r\n                                                ))\r\n                                            }\r\n                                            <div className=\"seats-map__row-num\" key={\"num\" + index}>{index + 1}</div>\r\n                                        </div>\r\n                                    </>\r\n                                ))\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"seats-map__vip\">\r\n                        {buildMap(vipSeats)}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <ReactTooltip />\r\n        </section >\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}