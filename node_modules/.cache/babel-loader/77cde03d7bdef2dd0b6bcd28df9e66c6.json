{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\cinema-park\\\\src\\\\components\\\\Comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport comments from \"../../mockData/comments\";\nimport \"./Comments.scss\";\nimport { users } from \"../../mockData/users\";\nimport { Heart } from \"../Svg/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user = [\"\", false];\nexport default function Comments() {\n  _s();\n\n  const [comment, setComment] = useState();\n  const [countComments, setCount] = useState(comments.length);\n  const [likes, setLikes] = useState(0); //const [user, setUser] = useState([\"\", false]);\n\n  function onChangeHadler(e) {\n    setComment(e.target.value);\n  }\n\n  function addComment() {\n    const [userStorage] = users.filter(user => user.email.includes(localStorage.getItem(\"user\")));\n\n    if (!userStorage) {\n      alert(\"Залишити коментар можливо лише після авторизації!\");\n      return;\n    }\n\n    comments.push({\n      author: userStorage.name,\n      text: comment,\n      countLikes: 0,\n      date: new Date().toLocaleDateString('ru-RU')\n    });\n    setCount(comments.length);\n  }\n\n  function putLike(e) {\n    const [userStorage] = users.filter(user => user.email.includes(localStorage.getItem(\"user\")));\n\n    if (!userStorage) {\n      alert(\"Оцінити коментар можливо лише після авторизації!\");\n      return;\n    }\n\n    let ind = +e.currentTarget.dataset.id;\n\n    if (+comments[ind].countLikes > 0 && user[1]) {\n      alert(user[1]);\n      comments[ind].countLikes = +comments[ind].countLikes - 1;\n      user[0] = \"\";\n      user[1] = false; //setUser([\"\", false]);\n    } else if (!user[1]) {\n      alert(user[1]);\n      comments[ind].countLikes = +comments[ind].countLikes + 1;\n      user[0] = userStorage.user;\n      user[1] = true; //setUser([userStorage.user, true]);\n    }\n\n    setLikes(comments[ind].countLikes);\n  }\n\n  function getComment(author, date, text, countLikes, index) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__author\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment__date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment__text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: putLike,\n          className: \"button button--like\",\n          \"data-id\": index,\n          children: /*#__PURE__*/_jsxDEV(Heart, {\n            className: \"heart-svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment__likes\",\n          children: countLikes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__count\",\n        children: [\"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0456 (\", countComments, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          className: \"input input--comment\",\n          onChange: onChangeHadler,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u0441\\u0432\\u043E\\u0457 \\u0432\\u0440\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F \\u0432\\u0456\\u0434  \\u043F\\u0435\\u0440\\u0435\\u0433\\u043B\\u044F\\u0434\\u0443 \\u0444\\u0456\\u043B\\u044C\\u043C\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--comment\",\n          onClick: addComment,\n          children: \"\\u0412\\u0456\\u0434\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments__output\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments__old\",\n          children: comments.map((comment, index) => getComment(comment.author, comment.date, comment.text, comment.countLikes, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comments, \"OJEUhmRxu3H5JS7udWTWGXEEh+k=\");\n\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/cinema-park/src/components/Comments/Comments.js"],"names":["React","useState","comments","users","Heart","user","Comments","comment","setComment","countComments","setCount","length","likes","setLikes","onChangeHadler","e","target","value","addComment","userStorage","filter","email","includes","localStorage","getItem","alert","push","author","name","text","countLikes","date","Date","toLocaleDateString","putLike","ind","currentTarget","dataset","id","getComment","index","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport comments from \"../../mockData/comments\";\r\nimport \"./Comments.scss\";\r\nimport { users } from \"../../mockData/users\";\r\nimport { Heart } from \"../Svg/Svg\";\r\n\r\nconst user = [\"\", false];\r\nexport default function Comments() {\r\n    const [comment, setComment] = useState();\r\n    const [countComments, setCount] = useState(comments.length);\r\n    const [likes, setLikes] = useState(0);\r\n    //const [user, setUser] = useState([\"\", false]);\r\n\r\n\r\n    function onChangeHadler(e) {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function addComment() {\r\n        const [userStorage] = users.filter(user => user.email.includes(localStorage.getItem(\"user\")));\r\n\r\n        if (!userStorage) {\r\n            alert(\"Залишити коментар можливо лише після авторизації!\");\r\n            return;\r\n        }\r\n\r\n        comments.push(\r\n            {\r\n                author: userStorage.name,\r\n                text: comment,\r\n                countLikes: 0,\r\n                date: new Date().toLocaleDateString('ru-RU')\r\n            }\r\n        );\r\n\r\n        setCount(comments.length);\r\n    }\r\n\r\n    function putLike(e) {\r\n        const [userStorage] = users.filter(user => user.email.includes(localStorage.getItem(\"user\")));\r\n\r\n        if (!userStorage) {\r\n            alert(\"Оцінити коментар можливо лише після авторизації!\");\r\n            return;\r\n        }\r\n\r\n        let ind = +e.currentTarget.dataset.id;\r\n\r\n        if (+comments[ind].countLikes > 0 && user[1]) {\r\n            alert(user[1]);\r\n            comments[ind].countLikes = +comments[ind].countLikes - 1;\r\n            user[0] = \"\";\r\n            user[1] = false;\r\n            //setUser([\"\", false]);\r\n        }\r\n        else if (!user[1]) {\r\n            alert(user[1]);\r\n            comments[ind].countLikes = +comments[ind].countLikes + 1;\r\n            user[0] = userStorage.user;\r\n            user[1] = true;\r\n            //setUser([userStorage.user, true]);\r\n        }\r\n\r\n        setLikes(comments[ind].countLikes);\r\n\r\n    }\r\n\r\n    function getComment(author, date, text, countLikes, index) {\r\n        return (\r\n            <div className=\"comment\" key={index}>\r\n                <div className=\"comment__top\">\r\n                    <div className=\"comment__author\">{author}</div>\r\n                    <div className=\"comment__date\">{date}</div>\r\n                </div>\r\n                <p className=\"comment__text\">{text}</p>\r\n                <div className=\"comment__bottom\">\r\n                    <button onClick={putLike} className=\"button button--like\" data-id={index}>\r\n                        <Heart className=\"heart-svg\" />\r\n                    </button>\r\n                    <span className=\"comment__likes\">{countLikes}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"comments\">\r\n            <div className=\"comments__container\">\r\n                <div className=\"comments__count\">Коментарі ({countComments})</div>\r\n                <div className=\"comments__input\">\r\n                    <textarea required className=\"input input--comment\" onChange={onChangeHadler}\r\n                        placeholder=\"Напишіть свої враження від  перегляду фільму\" />\r\n                    <button className=\"button button--comment\" onClick={addComment}>Відправити</button>\r\n                </div>\r\n                <div className=\"comments__output\">\r\n                    <div className=\"comments__old\">\r\n                        {\r\n                            comments.map((comment, index) => getComment(comment.author, comment.date, comment.text, comment.countLikes, index))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}