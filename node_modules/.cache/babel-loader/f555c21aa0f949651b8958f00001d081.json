{"ast":null,"code":"import _toConsumableArray from\"C:/Users/ddima/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/cinema-park/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/ddima/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/portfolio/cinema-park/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Link}from\"react-router-dom\";import\"../MovieList/MovieList.scss\";import{movieData as movies}from\"../../mockData/movieData\";import{HalfStar,Star}from\"../Svg/Svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function MovieList(props){function filterData(date,month){return movies.filter(function(movie){var flag=false;movie.datesShow.forEach(function(item){var _item=_slicedToArray(item,2),dateShow=_item[0],monthShow=_item[1];if(dateShow===date&&monthShow===month){flag=true;return;}});return flag;});}var getStars=function getStars(rating){var stars=new Array(5);var intValue=Math.floor(rating);if(intValue===5)stars.fill(/*#__PURE__*/_jsx(Star,{className:\"movie-item-svg\"}));else{stars.fill(/*#__PURE__*/_jsx(Star,{className:\"movie-item-svg\"}),0,intValue);stars.fill(/*#__PURE__*/_jsx(HalfStar,{className:\"movie-item-svg\"}),intValue,Math.ceil(rating));}return stars.map(function(star,index){return/*#__PURE__*/_jsx(\"span\",{className:\"star\",children:star},index);});};var getTags=function getTags(tags){return tags.length>1?tags.map(function(tag,index){return/*#__PURE__*/_jsx(\"span\",{className:\"tags__item\",children:tag},index);}):/*#__PURE__*/_jsx(\"span\",{className:\"tags__item\",children:tags});};var getPreviews=function getPreviews(previews){return previews.length>1?_toConsumableArray(previews).map(function(_ref,index){var href=_ref.href,time=_ref.time,_ref$tooltip=_ref.tooltip,price=_ref$tooltip.price,hall=_ref$tooltip.hall;return/*#__PURE__*/_jsxs(\"div\",{className:\"preview\",children:[/*#__PURE__*/_jsx(Link,{href:href,className:\"preview__link\",children:time}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview__tooltip\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"preview__price\",children:price}),/*#__PURE__*/_jsx(\"span\",{className:\"preview__hall\",children:hall})]})]},index);}):/*#__PURE__*/_jsxs(\"div\",{className:\"preview\",children:[/*#__PURE__*/_jsx(Link,{href:previews[0].href,className:\"preview__link\",children:previews[0].time}),/*#__PURE__*/_jsxs(\"div\",{className:\"preview__tooltip\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"preview__price\",children:previews[0].tooltip.price}),/*#__PURE__*/_jsx(\"span\",{className:\"preview__hall\",children:previews[0].tooltip.hall})]})]});};function showList(){var _props$dateForList$sp=props.dateForList.split(\",\"),_props$dateForList$sp2=_slicedToArray(_props$dateForList$sp,2),date=_props$dateForList$sp2[0],month=_props$dateForList$sp2[1];var filteredData=filterData(+date,+month);return filteredData.map(function(movie){return/*#__PURE__*/_jsxs(\"div\",{className:\"movie\",children:[/*#__PURE__*/_jsxs(Link,{style:{background:\"linear-gradient(180deg, rgba(126, 125, 125, 0.3) 0%, rgba(112, 111, 111, 0.36875) 11.46%, rgba(0, 0, 0, 0.9) 100%),url(\".concat(movie.src,\")\"),backgroundSize:\"cover\"},className:\"movie__poster poster\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"poster__tags tags\",children:getTags(movie.tags)}),/*#__PURE__*/_jsxs(\"div\",{className:\"poster-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"poster__title\",children:movie.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"poster__genre\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"genre-title\",children:\"\\u0416\\u0430\\u043D\\u0440: \"}),movie.genre]}),/*#__PURE__*/_jsx(\"div\",{className:\"poster__rating\",children:getStars(movie.rating)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"poster__previews previews\",children:getPreviews(movie.previews)})]},movie.id);});}var _props$dateForList$sp3=props.dateForList.split(\",\"),_props$dateForList$sp4=_slicedToArray(_props$dateForList$sp3,2),date=_props$dateForList$sp4[0],month=_props$dateForList$sp4[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"movie-title\",children:[\"\\u0412 \\u043F\\u0440\\u043E\\u043A\\u0430\\u0442\\u0456 \\u0437 \",date,\" \\u0441\\u0435\\u0440\\u043F\\u043D\\u044F\"]}),/*#__PURE__*/_jsx(\"section\",{className:\"movie-list\",children:showList()})]});}","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/portfolio/cinema-park/src/components/MovieList/MovieList.js"],"names":["React","Link","movieData","movies","HalfStar","Star","MovieList","props","filterData","date","month","filter","movie","flag","datesShow","forEach","item","dateShow","monthShow","getStars","rating","stars","Array","intValue","Math","floor","fill","ceil","map","star","index","getTags","tags","length","tag","getPreviews","previews","href","time","tooltip","price","hall","showList","dateForList","split","filteredData","background","src","backgroundSize","title","genre","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../MovieList/MovieList.scss\";\r\nimport { movieData as movies } from \"../../mockData/movieData\";\r\nimport { HalfStar, Star } from \"../Svg/Svg\";\r\n\r\nexport default function MovieList(props) {\r\n\r\n    function filterData(date, month) {\r\n        return movies.filter((movie) => {\r\n            let flag = false;\r\n            movie.datesShow.forEach(item => {\r\n                let [dateShow, monthShow] = item;\r\n                if (dateShow === date && monthShow === month) { flag = true; return; }\r\n            });\r\n            return flag;\r\n        });\r\n    }\r\n\r\n    const getStars = (rating) => {\r\n\r\n        const stars = new Array(5);\r\n        const intValue = Math.floor(rating);\r\n\r\n        if (intValue === 5) stars.fill(<Star className=\"movie-item-svg\" />);\r\n        else {\r\n            stars.fill(<Star className=\"movie-item-svg\" />, 0, intValue);\r\n            stars.fill(<HalfStar className=\"movie-item-svg\" />, intValue, Math.ceil(rating));\r\n        }\r\n\r\n        return stars.map((star, index) => (<span className=\"star\" key={index}>{star}</span>));\r\n    };\r\n\r\n    const getTags = (tags) => {\r\n        return (\r\n            (tags.length > 1)\r\n                ? tags.map((tag, index) => (<span className=\"tags__item\" key={index}>{tag}</span>))\r\n                : <span className=\"tags__item\">{tags}</span>\r\n        );\r\n    };\r\n\r\n    const getPreviews = (previews) => {\r\n        return (\r\n            (previews.length > 1)\r\n                ? [...previews].map(({ href, time, tooltip: { price, hall } }, index) => (\r\n                    <div key={index} className=\"preview\" >\r\n                        <Link href={href} className=\"preview__link\">{time}</Link>\r\n                        <div className=\"preview__tooltip\">\r\n                            <span className=\"preview__price\">{price}</span>\r\n                            <span className=\"preview__hall\">{hall}</span>\r\n                        </div>\r\n                    </div>))\r\n                : (<div className=\"preview\">\r\n                    <Link href={previews[0].href} className=\"preview__link\">{previews[0].time}</Link>\r\n                    <div className=\"preview__tooltip\">\r\n                        <span className=\"preview__price\">{previews[0].tooltip.price}</span>\r\n                        <span className=\"preview__hall\">{previews[0].tooltip.hall}</span>\r\n                    </div>\r\n                </div>)\r\n        );\r\n    };\r\n\r\n\r\n    function showList() {\r\n        const [date, month] = props.dateForList.split(\",\");\r\n        const filteredData = filterData(+date, +month);\r\n\r\n        return (\r\n            filteredData.map(movie => {\r\n                return (\r\n                    <div className=\"movie\" key={movie.id}>\r\n                        <Link style={{\r\n                            background: `linear-gradient(180deg, rgba(126, 125, 125, 0.3) 0%, rgba(112, 111, 111, 0.36875) 11.46%, rgba(0, 0, 0, 0.9) 100%),url(${movie.src})`,\r\n                            backgroundSize: \"cover\"\r\n                        }} className=\"movie__poster poster\" >\r\n                            <div className=\"poster__tags tags\">\r\n                                {getTags(movie.tags)}\r\n                            </div>\r\n                            <div className=\"poster-content\">\r\n                                <div className=\"poster__title\">{movie.title}</div>\r\n                                <div className=\"poster__genre\"><span className=\"genre-title\">Жанр: </span>{movie.genre}</div>\r\n                                <div className=\"poster__rating\">{getStars(movie.rating)}</div>\r\n                            </div>\r\n\r\n                        </Link>\r\n                        <div className=\"poster__previews previews\">\r\n                            {getPreviews(movie.previews)}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n    const [date, month] = props.dateForList.split(\",\");\r\n    return (\r\n        <>\r\n            <div className=\"movie-title\">В прокаті з {date} серпня</div>\r\n            <section className=\"movie-list\">\r\n                {showList()}\r\n            </section>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}