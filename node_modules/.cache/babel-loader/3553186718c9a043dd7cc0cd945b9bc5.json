{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\course\\\\beetroot-academy\\\\Loshkovetska\\\\cinema-park\\\\src\\\\common\\\\Select\\\\Select.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelect() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const {\n      options\n    } = event.target;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-mutiple-name-label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-name-label\",\n        id: \"demo-mutiple-name\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 28\n        }, this),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-mutiple-checkbox-label\",\n        children: \"Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-checkbox-label\",\n        id: \"demo-mutiple-checkbox\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 28\n        }, this),\n        renderValue: selected => selected.join(', '),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: personName.indexOf(name) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-mutiple-chip-label\",\n        children: \"Chip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-mutiple-chip-label\",\n        id: \"demo-mutiple-chip\",\n        multiple: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"select-multiple-chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 28\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chips,\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value,\n            className: classes.chip\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this),\n        MenuProps: MenuProps,\n        children: names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: clsx(classes.formControl, classes.noLabel),\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: personName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 28\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Placeholder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 36\n            }, this);\n          }\n\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), names.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          style: getStyles(name, personName, theme),\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        shrink: true,\n        htmlFor: \"select-multiple-native\",\n        children: \"Native\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        native: true,\n        value: personName,\n        onChange: handleChangeMultiple,\n        inputProps: {\n          id: 'select-multiple-native'\n        },\n        children: names.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MultipleSelect, \"kYNWKjX9Us9Rq4fzRThnBbcgkZ8=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = MultipleSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleSelect\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/course/beetroot-academy/Loshkovetska/cinema-park/src/common/Select/Select.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","classes","setPersonName","useState","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","map","join","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst names = [\r\n    'Oliver Hansen',\r\n    'Van Henry',\r\n    'April Tucker',\r\n    'Ralph Hubbard',\r\n    'Omar Alexander',\r\n    'Carlos Abbott',\r\n    'Miriam Wagner',\r\n    'Bradley Wilkerson',\r\n    'Virginia Andrews',\r\n    'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        setPersonName(event.target.value);\r\n    };\r\n\r\n    const handleChangeMultiple = (event) => {\r\n        const { options } = event.target;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            if (options[i].selected) {\r\n                value.push(options[i].value);\r\n            }\r\n        }\r\n        setPersonName(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-name-label\"\r\n                    id=\"demo-mutiple-name\"\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {names.map((name) => (\r\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {names.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={personName.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-chip-label\"\r\n                    id=\"demo-mutiple-chip\"\r\n                    multiple\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input id=\"select-multiple-chip\" />}\r\n                    renderValue={(selected) => (\r\n                        <div className={classes.chips}>\r\n                            {selected.map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {names.map((name) => (\r\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n                <Select\r\n                    multiple\r\n                    displayEmpty\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={(selected) => {\r\n                        if (selected.length === 0) {\r\n                            return <em>Placeholder</em>;\r\n                        }\r\n\r\n                        return selected.join(', ');\r\n                    }}\r\n                    MenuProps={MenuProps}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                >\r\n                    <MenuItem disabled value=\"\">\r\n                        <em>Placeholder</em>\r\n                    </MenuItem>\r\n                    {names.map((name) => (\r\n                        <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n                    Native\r\n                </InputLabel>\r\n                <Select\r\n                    multiple\r\n                    native\r\n                    value={personName}\r\n                    onChange={handleChangeMultiple}\r\n                    inputProps={{\r\n                        id: 'select-multiple-native',\r\n                    }}\r\n                >\r\n                    {names.map((name) => (\r\n                        <option key={name} value={name}>\r\n                            {name}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}