{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddima\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\portfolio\\\\cinema-park\\\\src\\\\components\\\\MovieList\\\\MovieList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../MovieList/MovieList.scss\";\nimport { movieData as movies } from \"../../mockData/movieData\";\nimport { HalfStar, Star } from \"../Svg/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieList(props) {\n  function filterData(date, month) {\n    return movies.filter(movie => {\n      let flag = false;\n      movie.datesShow.forEach(item => {\n        let [dateShow, monthShow] = item;\n\n        if (dateShow === date && monthShow === month) {\n          flag = true;\n          return;\n        }\n      });\n      return flag;\n    });\n  }\n\n  const getStars = rating => {\n    const stars = new Array(5);\n    const intValue = Math.floor(rating);\n    if (intValue === 5) stars.fill( /*#__PURE__*/_jsxDEV(Star, {\n      className: \"movie-item-svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 40\n    }, this));else {\n      stars.fill( /*#__PURE__*/_jsxDEV(Star, {\n        className: \"movie-item-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this), 0, intValue);\n      stars.fill( /*#__PURE__*/_jsxDEV(HalfStar, {\n        className: \"movie-item-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this), intValue, Math.ceil(rating));\n    }\n    return stars.map((star, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"star\",\n      children: star\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 44\n    }, this));\n  };\n\n  const getTags = tags => {\n    return tags.length > 1 ? tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tags__item\",\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 45\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tags__item\",\n      children: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this);\n  };\n\n  const getPreviews = previews => {\n    return previews.length > 1 ? [...previews].map(({\n      href,\n      time,\n      tooltip: {\n        price,\n        hall\n      }\n    }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        className: \"preview__link\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview__tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"preview__price\",\n          children: price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"preview__hall\",\n          children: hall\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: previews[0].href,\n        className: \"preview__link\",\n        children: previews[0].time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview__tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"preview__price\",\n          children: previews[0].tooltip.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"preview__hall\",\n          children: previews[0].tooltip.hall\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this);\n  };\n\n  function showList() {\n    const [date, month] = props.dateForList.split(\",\");\n    const filteredData = filterData(+date, +month);\n    return filteredData.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            background: `linear-gradient(180deg, rgba(126, 125, 125, 0.3) 0%, rgba(112, 111, 111, 0.36875) 11.46%, rgba(0, 0, 0, 0.9) 100%),url(${movie.src})`,\n            backgroundSize: \"cover\"\n          },\n          className: \"movie__poster poster\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster__tags tags\",\n            children: getTags(movie.tags)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poster__title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poster__genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre-title\",\n                children: \"\\u0416\\u0430\\u043D\\u0440: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 64\n              }, this), movie.genre]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"poster__rating\",\n              children: getStars(movie.rating)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poster__previews previews\",\n          children: getPreviews(movie.previews)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  const [date, month] = props.dateForList.split(\",\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-title\",\n      children: [\"\\u0412 \\u043F\\u0440\\u043E\\u043A\\u0430\\u0442\\u0456 \\u0437 \", date, \" \\u0432\\u0435\\u0440\\u0435\\u0441\\u043D\\u044F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movie-list\",\n      children: showList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/ddima/OneDrive/Рабочий стол/portfolio/cinema-park/src/components/MovieList/MovieList.js"],"names":["React","Link","movieData","movies","HalfStar","Star","MovieList","props","filterData","date","month","filter","movie","flag","datesShow","forEach","item","dateShow","monthShow","getStars","rating","stars","Array","intValue","Math","floor","fill","ceil","map","star","index","getTags","tags","length","tag","getPreviews","previews","href","time","tooltip","price","hall","showList","dateForList","split","filteredData","background","src","backgroundSize","title","genre","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../MovieList/MovieList.scss\";\r\nimport { movieData as movies } from \"../../mockData/movieData\";\r\nimport { HalfStar, Star } from \"../Svg/Svg\";\r\n\r\nexport default function MovieList(props) {\r\n\r\n    function filterData(date, month) {\r\n        return movies.filter((movie) => {\r\n            let flag = false;\r\n            movie.datesShow.forEach(item => {\r\n                let [dateShow, monthShow] = item;\r\n                if (dateShow === date && monthShow === month) { flag = true; return; }\r\n            });\r\n            return flag;\r\n        });\r\n    }\r\n\r\n    const getStars = (rating) => {\r\n\r\n        const stars = new Array(5);\r\n        const intValue = Math.floor(rating);\r\n\r\n        if (intValue === 5) stars.fill(<Star className=\"movie-item-svg\" />);\r\n        else {\r\n            stars.fill(<Star className=\"movie-item-svg\" />, 0, intValue);\r\n            stars.fill(<HalfStar className=\"movie-item-svg\" />, intValue, Math.ceil(rating));\r\n        }\r\n\r\n        return stars.map((star, index) => (<span className=\"star\" key={index}>{star}</span>));\r\n    };\r\n\r\n    const getTags = (tags) => {\r\n        return (\r\n            (tags.length > 1)\r\n                ? tags.map((tag, index) => (<span className=\"tags__item\" key={index}>{tag}</span>))\r\n                : <span className=\"tags__item\">{tags}</span>\r\n        );\r\n    };\r\n\r\n    const getPreviews = (previews) => {\r\n        return (\r\n            (previews.length > 1)\r\n                ? [...previews].map(({ href, time, tooltip: { price, hall } }, index) => (\r\n                    <div key={index} className=\"preview\" >\r\n                        <Link href={href} className=\"preview__link\">{time}</Link>\r\n                        <div className=\"preview__tooltip\">\r\n                            <span className=\"preview__price\">{price}</span>\r\n                            <span className=\"preview__hall\">{hall}</span>\r\n                        </div>\r\n                    </div>))\r\n                : (<div className=\"preview\">\r\n                    <Link href={previews[0].href} className=\"preview__link\">{previews[0].time}</Link>\r\n                    <div className=\"preview__tooltip\">\r\n                        <span className=\"preview__price\">{previews[0].tooltip.price}</span>\r\n                        <span className=\"preview__hall\">{previews[0].tooltip.hall}</span>\r\n                    </div>\r\n                </div>)\r\n        );\r\n    };\r\n\r\n\r\n    function showList() {\r\n        const [date, month] = props.dateForList.split(\",\");\r\n        const filteredData = filterData(+date, +month);\r\n\r\n        return (\r\n            filteredData.map(movie => {\r\n                return (\r\n                    <div className=\"movie\" key={movie.id}>\r\n                        <Link style={{\r\n                            background: `linear-gradient(180deg, rgba(126, 125, 125, 0.3) 0%, rgba(112, 111, 111, 0.36875) 11.46%, rgba(0, 0, 0, 0.9) 100%),url(${movie.src})`,\r\n                            backgroundSize: \"cover\"\r\n                        }} className=\"movie__poster poster\" >\r\n                            <div className=\"poster__tags tags\">\r\n                                {getTags(movie.tags)}\r\n                            </div>\r\n                            <div className=\"poster-content\">\r\n                                <div className=\"poster__title\">{movie.title}</div>\r\n                                <div className=\"poster__genre\"><span className=\"genre-title\">Жанр: </span>{movie.genre}</div>\r\n                                <div className=\"poster__rating\">{getStars(movie.rating)}</div>\r\n                            </div>\r\n\r\n                        </Link>\r\n                        <div className=\"poster__previews previews\">\r\n                            {getPreviews(movie.previews)}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n    const [date, month] = props.dateForList.split(\",\");\r\n    return (\r\n        <>\r\n            <div className=\"movie-title\">В прокаті з {date} вересня</div>\r\n            <section className=\"movie-list\">\r\n                {showList()}\r\n            </section>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}